/*
responsive element size
pass base(pc) width & height and the ratio to multiply by for mobile
*/
/*
responsive padding
pass padding values for top, right, bottom, left (same order as built in) and ratio to multiply by for mobile
*/
body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  cursor: default;
}

div.game {
  display: grid;
  position: relative;
  grid-template-columns: repeat(16, minmax(0, 1fr));
  grid-template-rows: repeat(16, minmax(0, 1fr));
  width: 100vw;
  height: 100vh;
  align-items: center;
  justify-content: center;
}
div.game div.player-wrapper {
  grid-row: 1/17;
}
div.game div.player-wrapper:nth-child(1) {
  grid-column: 1/9;
}
@media only screen and (min-width: 1280px) {
  div.game div.player-wrapper:nth-child(1) {
    grid-column: 1/9;
  }
}
div.game div.player-wrapper:nth-child(2) {
  grid-column: 9/17;
}
@media only screen and (min-width: 1280px) {
  div.game div.player-wrapper:nth-child(2) {
    grid-column: 9/17;
  }
}
div.game div.die {
  grid-column: 9/12;
  top: 0;
  left: 0;
  transform: translateX(-50%);
}
div.game div.die:nth-child(odd) {
  grid-row: 5/7;
}
@media only screen and (min-width: 1280px) {
  div.game div.die:nth-child(odd) {
    grid-row: 4/7;
  }
}
div.game div.die:nth-child(even) {
  grid-row: 8/10;
}
@media only screen and (min-width: 1280px) {
  div.game div.die:nth-child(even) {
    grid-row: 8/11;
  }
}
div.game button.new-game-button {
  grid-row: 2;
  grid-column: 8/10;
}
div.game button.roll-dice-button {
  grid-row: 10;
  grid-column: 8/10;
}
@media only screen and (min-width: 1280px) {
  div.game button.roll-dice-button {
    grid-row: 12;
  }
}
div.game button.hold-button {
  grid-row: 11;
  grid-column: 8/10;
}
@media only screen and (min-width: 1280px) {
  div.game button.hold-button {
    grid-row: 13;
  }
}
div.game input.final-score-input {
  grid-row: 14;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}/*# sourceMappingURL=App.css.map */